// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["createMany","orderByRelation"]

}

model User{
  id  Int @id @default(autoincrement())
  name String @unique
  email String? @unique
  password String?
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  comments Comment[]
  sayings Saying[]
  likes Like[]
  tags Tag[]
  rec recomand?
  alarm String @default("0,0")
  token String?
  isLogin Boolean? 
}
model Author{
  id Int @id  @default(autoincrement())
  name String @unique
  sayings Saying[]

}
model Saying{
  id  Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  user User @relation(fields: [userId],references:[id])
  author Author @relation(fields: [authorId],references:[id])
  comments Comment[]
  authorId Int
  userId Int
  text String
  tags Tag[]
  likes Like[]
  rec recomand[]
}
model recomand{
  userId Int @id
  user User @relation(fields: [userId],references:[id])
  sayingId Int?
  saying Saying? @relation(fields: [sayingId], references:[id])

} //unique

model Tag{
  id  Int @id @default(autoincrement())
  name String @unique
  sayings Saying[]
  users User[]

}

model Like{
  id  Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  saying Saying @relation(fields: [sayingId],references:[id])
  user User @relation(fields: [userId],references:[id])
  sayingId Int
  userId Int
  @@unique([sayingId,userId])
}

model Comment{
    id  Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  text String
  saying Saying @relation(fields: [sayingId],references:[id])
  user User @relation(fields: [userId],references:[id])
  sayingId Int
  userId Int
  
}